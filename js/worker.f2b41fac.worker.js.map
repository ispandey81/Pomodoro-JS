{"version":3,"file":"js/worker.f2b41fac.worker.js","mappings":"YAAAA,UAAaC,IACT,IAAIC,EAAwBD,EAAEE,KAC1BD,EAAsBE,WACtBC,cAAcH,EAAsBI,YACpCJ,EAAsBK,cAAe,EACrCC,YAAYN,IAEZA,EAAsBI,WAAaG,aAAY,IAAMC,MAAMR,IAAwB,MAI3FQ,MAAQ,SAAUR,GAEwC,GAAlDA,EAAsBS,0BAC6B,IAAnDT,EAAsBU,2BAEtBV,EAAsBS,yBAA2B,GACjDT,EAAsBU,6BAG4B,IAAlDV,EAAsBS,0BACtBT,EAAsBS,yBAA2B,IAEjDT,EAAsBS,2BAG4B,GAAlDT,EAAsBU,0BAC4B,GAAlDV,EAAsBS,2BAEyB,aAA3CT,EAAsBW,iBACxBX,EAAsBW,iBAAmB,cAEzCX,EAAsBW,iBAAmB,WAE3CX,EAAsBY,YAAa,GAErCZ,EAAsBa,gBAAkBC,WAAWd,EAAsBU,0BACzEV,EAAsBe,gBAAkBD,WAAWd,EAAsBS,0BACzEH,YAAYN,IAGlBc,WAAa,SAAUE,GACnB,OAAOA,GAAS,IAAgB,KAAVA,EACnB,GAAEA,IACO,KAAVA,EACA,KACC,IAAGA,M","sources":["webpack://pomodoro-js/./src/workers/worker.js"],"sourcesContent":["onmessage = (e) => {\n    let dataFromCallingThread = e.data;\n    if (dataFromCallingThread.stopTimer) {\n        clearInterval(dataFromCallingThread.intervalId);\n        dataFromCallingThread.timerStarted = false;\n        postMessage(dataFromCallingThread);\n    } else {\n        dataFromCallingThread.intervalId = setInterval(() => timer(dataFromCallingThread), 1000);\n    }\n}\n\ntimer = function (dataFromCallingThread) {\n    if (\n        dataFromCallingThread.secondForTimeCalculation == 0 &&\n        dataFromCallingThread.minuteForTimeCalculation !== 0\n      ) {\n        dataFromCallingThread.secondForTimeCalculation = 60;\n        dataFromCallingThread.minuteForTimeCalculation--;\n      }\n      if (\n        dataFromCallingThread.secondForTimeCalculation == 60 ||\n        dataFromCallingThread.secondForTimeCalculation > 0\n      ) {\n        dataFromCallingThread.secondForTimeCalculation--;\n      }\n      if (\n        dataFromCallingThread.minuteForTimeCalculation == 0 &&\n        dataFromCallingThread.secondForTimeCalculation == 0\n      ) {\n        if (dataFromCallingThread.typeOfBtnClicked === \"Pomodoro\") {\n          dataFromCallingThread.typeOfBtnClicked = \"Short Break\";\n        } else {\n          dataFromCallingThread.typeOfBtnClicked = \"Pomodoro\";\n        }\n        dataFromCallingThread.resetTimer = true;\n      }\n      dataFromCallingThread.minuteHTMLValue = returnData(dataFromCallingThread.minuteForTimeCalculation);\n      dataFromCallingThread.secondHTMLValue = returnData(dataFromCallingThread.secondForTimeCalculation);\n      postMessage(dataFromCallingThread);\n}\n\nreturnData = function (input) {\n    return input >= 10 && input !== 60\n    ? `${input}`\n    : input === 60\n    ? \"00\"\n    : `0${input}`;\n}"],"names":["onmessage","e","dataFromCallingThread","data","stopTimer","clearInterval","intervalId","timerStarted","postMessage","setInterval","timer","secondForTimeCalculation","minuteForTimeCalculation","typeOfBtnClicked","resetTimer","minuteHTMLValue","returnData","secondHTMLValue","input"],"sourceRoot":""}